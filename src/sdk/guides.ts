/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { guidesGetv1Guides } from "../funcs/guidesGetv1Guides.js";
import { guidesPostv1Guides } from "../funcs/guidesPostv1Guides.js";
import { guidesPostv1GuidesSlugPublish } from "../funcs/guidesPostv1GuidesSlugPublish.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Guides extends ClientSDK {
  /**
   * List all projects
   *
   * @remarks
   * Get a list of all guide projects
   */
  async getv1Guides(
    options?: RequestOptions,
  ): Promise<Array<operations.Getv1GuidesResponseBody>> {
    return unwrapAsync(guidesGetv1Guides(
      this,
      options,
    ));
  }

  /**
   * Create new project
   *
   * @remarks
   * Create a new guide project
   */
  async postv1Guides(
    request: operations.Postv1GuidesRequestBody,
    options?: RequestOptions,
  ): Promise<operations.Postv1GuidesResponseBody> {
    return unwrapAsync(guidesPostv1Guides(
      this,
      request,
      options,
    ));
  }

  /**
   * Publish project
   *
   * @remarks
   * Initiate a new publishing process
   */
  async postv1GuidesSlugPublish(
    request: operations.Postv1GuidesSlugPublishRequest,
    options?: RequestOptions,
  ): Promise<operations.Postv1GuidesSlugPublishResponseBody> {
    return unwrapAsync(guidesPostv1GuidesSlugPublish(
      this,
      request,
      options,
    ));
  }
}
