/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type Postv1ApisNamespaceSlugAccessGroupRequestBody = {
  accessGroupSlug: string;
};

export type Postv1ApisNamespaceSlugAccessGroupRequest = {
  namespace: string;
  slug: string;
  requestBody: Postv1ApisNamespaceSlugAccessGroupRequestBody;
};

/** @internal */
export const Postv1ApisNamespaceSlugAccessGroupRequestBody$inboundSchema:
  z.ZodType<
    Postv1ApisNamespaceSlugAccessGroupRequestBody,
    z.ZodTypeDef,
    unknown
  > = z.object({
    accessGroupSlug: z.string(),
  });

/** @internal */
export type Postv1ApisNamespaceSlugAccessGroupRequestBody$Outbound = {
  accessGroupSlug: string;
};

/** @internal */
export const Postv1ApisNamespaceSlugAccessGroupRequestBody$outboundSchema:
  z.ZodType<
    Postv1ApisNamespaceSlugAccessGroupRequestBody$Outbound,
    z.ZodTypeDef,
    Postv1ApisNamespaceSlugAccessGroupRequestBody
  > = z.object({
    accessGroupSlug: z.string(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Postv1ApisNamespaceSlugAccessGroupRequestBody$ {
  /** @deprecated use `Postv1ApisNamespaceSlugAccessGroupRequestBody$inboundSchema` instead. */
  export const inboundSchema =
    Postv1ApisNamespaceSlugAccessGroupRequestBody$inboundSchema;
  /** @deprecated use `Postv1ApisNamespaceSlugAccessGroupRequestBody$outboundSchema` instead. */
  export const outboundSchema =
    Postv1ApisNamespaceSlugAccessGroupRequestBody$outboundSchema;
  /** @deprecated use `Postv1ApisNamespaceSlugAccessGroupRequestBody$Outbound` instead. */
  export type Outbound = Postv1ApisNamespaceSlugAccessGroupRequestBody$Outbound;
}

export function postv1ApisNamespaceSlugAccessGroupRequestBodyToJSON(
  postv1ApisNamespaceSlugAccessGroupRequestBody:
    Postv1ApisNamespaceSlugAccessGroupRequestBody,
): string {
  return JSON.stringify(
    Postv1ApisNamespaceSlugAccessGroupRequestBody$outboundSchema.parse(
      postv1ApisNamespaceSlugAccessGroupRequestBody,
    ),
  );
}

export function postv1ApisNamespaceSlugAccessGroupRequestBodyFromJSON(
  jsonString: string,
): SafeParseResult<
  Postv1ApisNamespaceSlugAccessGroupRequestBody,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      Postv1ApisNamespaceSlugAccessGroupRequestBody$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'Postv1ApisNamespaceSlugAccessGroupRequestBody' from JSON`,
  );
}

/** @internal */
export const Postv1ApisNamespaceSlugAccessGroupRequest$inboundSchema: z.ZodType<
  Postv1ApisNamespaceSlugAccessGroupRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  namespace: z.string(),
  slug: z.string(),
  RequestBody: z.lazy(() =>
    Postv1ApisNamespaceSlugAccessGroupRequestBody$inboundSchema
  ),
}).transform((v) => {
  return remap$(v, {
    "RequestBody": "requestBody",
  });
});

/** @internal */
export type Postv1ApisNamespaceSlugAccessGroupRequest$Outbound = {
  namespace: string;
  slug: string;
  RequestBody: Postv1ApisNamespaceSlugAccessGroupRequestBody$Outbound;
};

/** @internal */
export const Postv1ApisNamespaceSlugAccessGroupRequest$outboundSchema:
  z.ZodType<
    Postv1ApisNamespaceSlugAccessGroupRequest$Outbound,
    z.ZodTypeDef,
    Postv1ApisNamespaceSlugAccessGroupRequest
  > = z.object({
    namespace: z.string(),
    slug: z.string(),
    requestBody: z.lazy(() =>
      Postv1ApisNamespaceSlugAccessGroupRequestBody$outboundSchema
    ),
  }).transform((v) => {
    return remap$(v, {
      requestBody: "RequestBody",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Postv1ApisNamespaceSlugAccessGroupRequest$ {
  /** @deprecated use `Postv1ApisNamespaceSlugAccessGroupRequest$inboundSchema` instead. */
  export const inboundSchema =
    Postv1ApisNamespaceSlugAccessGroupRequest$inboundSchema;
  /** @deprecated use `Postv1ApisNamespaceSlugAccessGroupRequest$outboundSchema` instead. */
  export const outboundSchema =
    Postv1ApisNamespaceSlugAccessGroupRequest$outboundSchema;
  /** @deprecated use `Postv1ApisNamespaceSlugAccessGroupRequest$Outbound` instead. */
  export type Outbound = Postv1ApisNamespaceSlugAccessGroupRequest$Outbound;
}

export function postv1ApisNamespaceSlugAccessGroupRequestToJSON(
  postv1ApisNamespaceSlugAccessGroupRequest:
    Postv1ApisNamespaceSlugAccessGroupRequest,
): string {
  return JSON.stringify(
    Postv1ApisNamespaceSlugAccessGroupRequest$outboundSchema.parse(
      postv1ApisNamespaceSlugAccessGroupRequest,
    ),
  );
}

export function postv1ApisNamespaceSlugAccessGroupRequestFromJSON(
  jsonString: string,
): SafeParseResult<
  Postv1ApisNamespaceSlugAccessGroupRequest,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      Postv1ApisNamespaceSlugAccessGroupRequest$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'Postv1ApisNamespaceSlugAccessGroupRequest' from JSON`,
  );
}
